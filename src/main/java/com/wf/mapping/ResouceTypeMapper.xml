<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wf.dao.ResourceTypeMapper" >
  <resultMap id="BaseResultMap" type="com.wf.bean.ResourceType" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="resource_type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="resource_type_descri" property="typedescri" jdbcType="VARCHAR" />
    <result column="resource_type_code" property="typeCode" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="VARCHAR" />
	<result column="resource_type_state" property="typeState" jdbcType="INTEGER" />																				
  </resultMap>
 
 <!-- 查询所有资源分类信息 -->
  <select id="find" resultMap="BaseResultMap" parameterType="java.util.Map">
    select * from resource_type order by add_time desc
  </select>
 <!-- 查询学科分类信息 -->
  <select id="selectResourceTypeInfor" resultMap="BaseResultMap" parameterType="java.util.Map">
    select * from resource_type
    where 1=1
    <if test="typeName!=null">
    	and resource_type_name like  #{typeName}
    </if>
    	order by add_time desc 
    <if test="pageNum >-1 and pageSize >-1">  
        limit #{pageNum},#{pageSize}
    </if>
     
  </select>
  
  <select id="selectResourceTypeInforAll" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from resource_type where 1=1
    <if test="typeName!=null">
    and	 resource_type_name  like  #{typeName}
    </if>
      
  </select>
 
 <select id="findResourceType" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from resource_type where id=#{id}
  </select>
  
  <insert id="insertResourceType"  parameterType="com.wf.bean.ResourceType">
           insert into resource_type(id,resource_type_name,resource_type_descri,resource_type_code,add_time)
               values(#{id},#{typeName},#{typedescri},#{typeCode},#{addTime})
  </insert>
  
  <select id="findResourceTypeParam" resultMap="BaseResultMap" parameterType="java.util.Map">
    select * from resource_type where resource_type_name=#{typeName} and  resource_type_code=#{typeCode}
  </select>
  
  <delete id="deleteResourceType" parameterType="java.lang.String">
           delete from resource_type where 
           <if test="_parameter !=null">
           		id in
           		<foreach collection="_parameter.split(',')"  open="(" close=")" separator="," item="item">  
					#{item}
				</foreach>
           </if> 
           <if test="_parameter==null">
           		1=2
           </if> 
          
   </delete>
   
   <update id="updateResourceTypeState">
   		update resource_type SET resource_type_state=#{typeState} where id=#{id}
   </update>
   <update id="updateResourceType" parameterType="com.wf.bean.ResourceType">
   		update resource_type SET resource_type_name=#{typeName},resource_type_descri=#{typedescri},resource_type_code=#{typeCode} where id=#{id}
   </update>
   
  <select id="getRtype" resultMap="BaseResultMap" >
  select * from resource_type 
  </select>
  
  <select id="getRtypeName" resultMap="BaseResultMap" >
  select * from resource_type 
  </select>
  <select id="getOne"  resultMap="BaseResultMap" >
  select * from resource_type where resource_type_code=#{Code} limit 1
  </select> 
  <select id="getAll"  resultMap="BaseResultMap">
  select * from resource_type
  </select>
    <select id="getAllName" resultType="java.lang.String">
        select resource_type_name from resource_type
    </select>
   <select id="getAll1"  resultMap="BaseResultMap">
  select * from resource_type where resource_type_state = 1
  </select>
  
  <select id="checkRsTypeCode" parameterType="java.lang.String" resultType="java.lang.String">
    select resource_type_code from resource_type where resource_type_code=#{rsTypeCode}
  </select>
  
  <select id="checkRsTypeName" parameterType="java.lang.String" resultType="java.lang.String">
    select resource_type_name from resource_type where resource_type_name=#{rsTypeName}
  </select>

    <select id="getResourceByCode" resultMap="BaseResultMap">
        select resource_type_name,resource_type_code from resource_type
        where 1=1
        <if test="code!=null and code!=''">
            and resource_type_code IN
            <foreach collection="code" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by resource_type_code
    </select>
  
</mapper>