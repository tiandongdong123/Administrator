﻿<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.1.xsd">
    
     
	<context:component-scan base-package="com.wf,com.wanfangdata"></context:component-scan>


    <!-- XXL-CONF配置解析器 --> 
    <bean id="xxlConfPropertyPlaceholderConfigurer" class="com.xxl.conf.core.spring.XxlConfPropertyPlaceholderConfigurer" />
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="1000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
		<property name="dbType" value="mysql" />
	</bean>

	<!-- 配置数据源,使用 druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${wf-public.jdbc.adminManager.url}" />
		<property name="username" value="${wf-public.jdbc.username}" />
		<property name="password" value="${wf-public.jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="10" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="50" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="maxOpenPreparedStatements" value="100" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟,超过30分钟,连接会自动关闭 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="false" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="config,wall,log4j" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<!-- 用户名和密码是否加密 -->
		<property name="useGlobalDataSourceStat" value="true" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/wf/mapping/*.xml"></property>  
	</bean>  
      
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wf.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
	</bean>  
      
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
	<bean id="transactionManager"
	    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource" />
	</bean>
    <!--开启注解事务  打开事务驱动-->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<!-- 配置第二个数据源 -->
	<bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${wf-admin.jdbc.statistics.url}" />
		<property name="username" value="${wf-admin.jdbc.statistics.username}" />
		<property name="password" value="${wf-admin.jdbc.statistics.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="10" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="50" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="maxOpenPreparedStatements" value="100" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟,超过30分钟,连接会自动关闭 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="false" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="config,wall,log4j" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<!-- 用户名和密码是否加密 -->
		<property name="useGlobalDataSourceStat" value="true" />
	</bean>
    <bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">  
		<property name="dataSource" ref="dataSource2" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/wf/mapping2/*.xml"></property>  
	</bean>  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wf.dao2" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2"></property>  
	</bean>  
	<bean id="transactionManager2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource2" />
	</bean>
	
	<!-- 定时器 -->
	<task:annotation-driven/>
	<context:annotation-config/>  
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  
    <context:component-scan base-package="com.job"/>  
	<!-- dubbo配置文件 -->
	<import resource="classpath:dubbo-admin-consumer.xml" />

	<bean id="personAuthorityMapping" class="com.wanfangdata.setting.BindAuthorityMapping">
		<constructor-arg name="authority">
			<map>
				<entry key="资源下载" value="resource"/>
				<entry key="万方分析" value="miner"/>
			</map>
		</constructor-arg>
		<constructor-arg name="bindType">
			<map>
				<entry key="0" value="机构个人同时登录"/>
				<entry key="1" value="机构登录"/>
				<entry key="2" value="线下扫描"/>
			</map>
		</constructor-arg>
		<property name="authorityCn">
		<map>
			<entry key="resource" value="资源下载"/>
			<entry key="miner" value="万方分析"/>
		</map>
		</property>
	</bean>
    <bean id="channel" class="com.wanfangdata.grpcchannel.GrpcChannel"/>
    <bean id="grpcServer" class="com.wanfangdata.grpcchannel.GrpcServer"/>
	<bean id="bindAuthorityChannel" class="com.wanfangdata.grpcchannel.BindAuthorityChannel"/>
	<bean id="bindAccountChannel" class="com.wanfangdata.grpcchannel.BindAccountChannel"/>

	<!--邮箱发送链接信息验证-->
	<bean id="sendEmailConfig" class="com.utils.WFMailUtil">
		<constructor-arg name="FROM" value="deliver@wanfangdata.com.cn"/>
		<constructor-arg name="PWD" value="soft@123"/>
		<constructor-arg name="TITLE" value="万方数据个人绑定机构线下扫描二维码"/>
		<constructor-arg name="HOST" value="mail.wanfangdata.com.cn"/>
		<constructor-arg name="SMTP" value="smtp"/>
	</bean>
</beans>