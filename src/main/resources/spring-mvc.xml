<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    <!-- 开启注解模式 -->
    <mvc:annotation-driven />
    
    <bean id="xxlConfPropertyPlaceholderConfigurer" class="com.xxl.conf.core.spring.XxlConfPropertyPlaceholderConfigurer" />
    
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.wf.controller" />

    <mvc:resources mapping="/page/**" location="/page/"/>
   
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	
				<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<mvc:interceptors>
		<bean class="com.interceptor.SpringMVCInterceptor" />
		<mvc:interceptor>  
			<mvc:mapping path="/*/*" />
			<mvc:mapping path="/*" />   
			<!--  需排除拦截的地址 -->
			<mvc:exclude-mapping path="/user/toLogin.do"/>
			<mvc:exclude-mapping path="/user/userLogin.do"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/inc/**"/>  
			<mvc:exclude-mapping path="/page/**"/>
			<mvc:exclude-mapping path="/template/**"/>
			<bean class="com.interceptor.UserInterceptor"/>
		</mvc:interceptor>  
    </mvc:interceptors>
		
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
	<!-- 第一个GroupTemplate，模板放在Webapp下 -->
	<bean name="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration" init-method="init">
		<property name="configFileResource" value="classpath:beetl.properties"/>
		<property name="functions">
			<map>

			</map>
		</property>
	</bean>

		
	<!-- Beetl视图解析器1 -->
	<bean name="beetlViewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<!-- 多视图解析器，需要设置viewNames和order -->
		<property name="viewNames">
			<list>
				<value>/page/**</value>
			</list>
		</property>
		<property name="suffix" value=".html"/>
		<property name="contentType" value="text/html;charset=UTF-8"/>
		<property name="order" value="0"/>
		<!-- 多GroupTemplate，需要指定使用的bean -->
		<property name="config" ref="beetlConfig"/>
	</bean>
</beans>